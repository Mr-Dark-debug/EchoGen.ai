name: Test Build System

on:
  workflow_dispatch:
    inputs:
      build_android:
        description: 'Build Android APK'
        required: false
        default: true
        type: boolean
      build_ios:
        description: 'Build iOS IPA'
        required: false
        default: false
        type: boolean

jobs:
  validate-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'

      - name: Upgrade Flutter
        run: |
          flutter upgrade --force
          flutter --version
          dart --version

      - name: Flutter Doctor
        run: flutter doctor -v

      - name: Validate pubspec.yaml
        run: |
          echo "📋 Validating pubspec.yaml..."
          flutter pub get --dry-run
          echo "✅ pubspec.yaml is valid"

      - name: Check dependencies
        run: |
          echo "📦 Checking dependencies..."
          flutter pub get
          flutter pub deps
          echo "✅ Dependencies resolved successfully"

      - name: Analyze code
        run: |
          echo "🔍 Running code analysis..."
          flutter analyze
          echo "✅ Code analysis passed"

      - name: Check formatting
        run: |
          echo "🎨 Checking code formatting..."
          dart format --output=none --set-exit-if-changed .
          echo "✅ Code formatting is correct"

      - name: Run tests
        run: |
          echo "🧪 Running tests..."
          flutter test
          echo "✅ All tests passed"

  test-android-build:
    needs: validate-setup
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.build_android == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'

      - name: Upgrade Flutter
        run: |
          flutter upgrade --force
          flutter --version

      - name: Build Android APK
        run: |
          echo "🔨 Testing Android APK build..."
          flutter clean
          flutter pub get
          flutter build apk --release --verbose
          echo "✅ Android APK build successful!"
          
          # Check file exists and size
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "📱 APK file created successfully"
            echo "📊 APK size: $(du -h build/app/outputs/flutter-apk/app-release.apk | cut -f1)"
          else
            echo "❌ APK file not found!"
            exit 1
          fi

      - name: Build Android App Bundle
        run: |
          echo "📦 Testing Android App Bundle build..."
          flutter build appbundle --release --verbose
          echo "✅ Android App Bundle build successful!"
          
          # Check file exists and size
          if [ -f "build/app/outputs/bundle/release/app-release.aab" ]; then
            echo "📱 AAB file created successfully"
            echo "📊 AAB size: $(du -h build/app/outputs/bundle/release/app-release.aab | cut -f1)"
          else
            echo "❌ AAB file not found!"
            exit 1
          fi

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-android-builds
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          retention-days: 1

  test-ios-build:
    needs: validate-setup
    runs-on: macos-latest
    if: ${{ github.event.inputs.build_ios == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'

      - name: Upgrade Flutter
        run: |
          flutter upgrade --force
          flutter --version

      - name: Build iOS
        run: |
          echo "🍎 Testing iOS build..."
          flutter clean
          flutter pub get
          flutter build ios --release --no-codesign --verbose
          echo "✅ iOS build successful!"
          
          # Check if Runner.app exists
          if [ -d "build/ios/iphoneos/Runner.app" ]; then
            echo "📱 iOS app created successfully"
            echo "📊 App size: $(du -sh build/ios/iphoneos/Runner.app | cut -f1)"
          else
            echo "❌ iOS app not found!"
            ls -la build/ios/iphoneos/
            exit 1
          fi

      - name: Create test IPA
        run: |
          echo "📦 Creating test IPA..."
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r ../../../test-ios-build.ipa Payload/
          cd ../../..
          
          if [ -f "test-ios-build.ipa" ]; then
            echo "✅ IPA created successfully"
            echo "📊 IPA size: $(du -h test-ios-build.ipa | cut -f1)"
          else
            echo "❌ IPA creation failed!"
            exit 1
          fi

      - name: Upload test iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-ios-build
          path: test-ios-build.ipa
          retention-days: 1

  summary:
    needs: [validate-setup, test-android-build, test-ios-build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Build Summary
        run: |
          echo "## 🎯 Build Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.validate-setup.result }}" == "success" ]; then
            echo "✅ **Setup Validation**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Setup Validation**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ github.event.inputs.build_android }}" == "true" ]; then
            if [ "${{ needs.test-android-build.result }}" == "success" ]; then
              echo "✅ **Android Build**: Passed" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Android Build**: Failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️ **Android Build**: Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ github.event.inputs.build_ios }}" == "true" ]; then
            if [ "${{ needs.test-ios-build.result }}" == "success" ]; then
              echo "✅ **iOS Build**: Passed" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **iOS Build**: Failed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏭️ **iOS Build**: Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "If all tests passed, you can safely push to main branch to trigger a release!" >> $GITHUB_STEP_SUMMARY
